-- CISC/CMPE 422/835
-- 3-bit counter
-- Version 3: 4 synchronous processes (one process per bit)
--            behaviour defined in way that highlights commonality
MODULE counter_cell(carry_in)
VAR
  v : boolean;

ASSIGN
  init(v) := FALSE;
  next(v) := v xor carry_in;

DEFINE
  carry_out := v & carry_in;
-- END MODULE counter_cell

MODULE main
VAR
  b0 : counter_cell(TRUE);
  b1 : counter_cell(b0.carry_out);
  b2 : counter_cell(b1.carry_out);
DEFINE
  zero  := !b0.v & !b1.v & !b2.v;
  seven :=  b0.v &  b1.v &  b2.v;
-- END MODULE main

-- "'carry_out' of bit 'b2' is set infinitely often"
-- i.e.,
-- "the counter will transition from '7' to '0' infinitely often"
-- i.e.,
-- "it is impossible for the counter to not reach '7' eventually"
SPEC
  AG AF b2.carry_out

-- "along all paths p, in every state s in p, 'b0' is reset in s
-- i.e., 
-- "'b0' is reset in every reachable state"
-- SPEC 
--   AG !b0.v

-- "along all paths p, in every state s in p, if the counter represents 7
-- in s, then it will represent 0 in all successors of s"
SPEC 
  AG (seven -> AX zero)

